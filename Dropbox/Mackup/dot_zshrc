# Fix perl: warning: Setting locale failed.
LC_CTYPE=en_US.UTF-8
LC_ALL=en_US.UTF-8

# History relative
HISTSIZE=10000000
SAVEHIST=$HISTSIZE
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.
HISTORY_IGNORE="(ls|rm *|pwd|exit|touch *|unar *)"

# Let history ignore wrong commands
zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }

# Enable GPG popup window
export GPG_TTY="$( tty )"

# Tmux
## make cursor move compatible inside the tmux
### alt + ->
bindkey "^[[1;3C" forward-word
### alt + <-
bindkey "^[[1;3D" backward-word
## use a symbolic link to replace the fixed sock path, allowing for dynamic updates.
if [[ -n "$TMUX" ]]; then
  export SSH_AUTH_SOCK="$HOME/.ssh/$(basename "$(dirname "$TMUX")")-$(tmux display-message -p "#{session_id}" | tr -d '$').sock"
fi

# Select syntax theme for bat
# `bat --list-themes | fzf --preview="bat --theme={} --color=always /path/file"` for preview
# export BAT_THEME="1337"

# Protect output redirect overwrite exist file
set -o noclobber
# Glob Dotfiles As Well
setopt globdots
# Automatically Change Directory If A Directory Is Entered
setopt autocd

# Fd cli tool follow LS_COLORS, so make their color seem in the same way
# src: https://github.com/sharkdp/fd/issues/671#issuecomment-717525040
export LS_COLORS='no=00:fi=00:di=36:ln=35:pi=30;44:so=35;44:do=35;44:bd=33;44:cd=37;44:or=05;37;41:mi=05;37;41:ex=1;38;5;197:*.cmd=1;38;5;197:*.exe=1;38;5;197:*.com=1;38;5;197:*.bat=1;38;5;197:*.reg=1;38;5;197:*.app=1;38;5;197:*AUTHORS=38;5;248:*CHANGES=38;5;248:*CONTRIBUTORS=38;5;248:*COPYING=38;5;248:*COPYRIGHT=38;5;248:*HISTORY=38;5;248:*INSTALL=38;5;248:*LICENSE=38;5;248:*LICENSE-MIT=38;5;248:*LICENSE-APACHE=38;5;248:*NOTICE=38;5;248:*PATENTS=38;5;248:*README=38;5;248:*FAQ=38;5;248:*VERSION=38;5;248:*.css=38;5;220:*.htm=38;5;220:*.html=38;5;220:*.json=38;5;220:*.less=38;5;220:*.md=38;5;220:*.mkd=38;5;220:*.org=38;5;220:*.shtml=38;5;220:*.tex=38;5;220:*.txt=38;5;220:*.xml=38;5;220:*.toml=38;5;220:*.yml=38;5;220:*.rst=38;5;220:*Makefile=38;5;48:*CMakeLists.txt=38;5;48:*.gitignore=38;5;48:*.gitmodules=38;5;48:*SConscript=38;5;48:*SConstruct=38;5;48:*.C=32:*.awk=32:*.c=32:*.cc=32:*.cpp=32:*.csh=32:*.cxx=32:*.el=32:*.h=38;5;50:*.hs=32:*.java=32:*.js=32:*.l=32:*.lhs=32:*.lua=32:*.man=32:*.n=32:*.objc=32:*.p=32:*.php=32:*.pl=32:*.pm=32:*.pod=32:*.purs=32:*.py=32:*.r=32:*.rb=32:*.rdf=32:*.rs=32:*.sed=32:*.sh=32:*.sql=32:*.vim=32:*.zsh=32:*.JPG=33:*.bmp=33:*.cgm=33:*.dl=33:*.dvi=33:*.emf=33:*.eps=33:*.gif=33:*.jpeg=33:*.jpg=33:*.mng=33:*.pbm=33:*.pcx=33:*.pdf=33:*.pgm=33:*.png=33:*.ppm=33:*.pps=33:*.ppsx=33:*.ps=33:*.svg=33:*.svgz=33:*.tga=33:*.tif=33:*.tiff=33:*.xbm=33:*.xcf=33:*.xpm=33:*.xwd=33:*.xwd=33:*.yuv=33:*.aac=33:*.au=33:*.flac=33:*.mid=33:*.midi=33:*.mka=33:*.mp3=33:*.mpa=33:*.mpeg=33:*.mpg=33:*.ogg=33:*.ra=33:*.wav=33:*.anx=33:*.asf=33:*.avi=33:*.axv=33:*.flc=33:*.fli=33:*.flv=33:*.gl=33:*.m2v=33:*.m4v=33:*.mkv=33:*.mov=33:*.mp4=33:*.mp4v=33:*.mpeg=33:*.mpg=33:*.nuv=33:*.ogm=33:*.ogv=33:*.ogx=33:*.qt=33:*.rm=33:*.rmvb=33:*.swf=33:*.vob=33:*.wmv=33:*.doc=31:*.docx=31:*.dot=31:*.dotx=31:*.fla=31:*.ppt=31:*.pptx=31:*.psd=31:*.rtf=31:*.xls=31:*.xlsx=31:*.7z=1;35:*.Z=1;35:*.apk=1;35:*.arj=1;35:*.bin=1;35:*.bz=1;35:*.bz2=1;35:*.cab=1;35:*.deb=1;35:*.dmg=1;35:*.gem=1;35:*.gz=1;35:*.iso=1;35:*.jar=1;35:*.msi=1;35:*.rar=1;35:*.rpm=1;35:*.tar=1;35:*.tbz=1;35:*.tbz2=1;35:*.tgz=1;35:*.tx=1;35:*.war=1;35:*.xpi=1;35:*.xz=1;35:*.z=1;35:*.zip=1;35:*#=38;5;244:*,v=38;5;244:*~=38;5;244:*.BAK=38;5;244:*.DIST=38;5;244:*.OFF=38;5;244:*.OLD=38;5;244:*.ORIG=38;5;244:*.bak=38;5;244:*.dist=38;5;244:*.log=38;5;244:*.o=38;5;244:*.off=38;5;244:*.old=38;5;244:*.org_archive=38;5;244:*.orig=38;5;244:*.pyc=38;5;244:*.swo=38;5;244:*.swp=38;5;244:*.lock=38;5;244:*.scons_opt=38;5;244:*.sconsign.dblite=38;5;244:*.reporter=38;5;244:*.project=38;5;244:*.cdtproject=38;5;244:*Doxyfile=38;5;244:*.deployed=38;5;244:*TODO=1:';

# NNN
## color theme
BLK="0B" CHR="0B" DIR="04" EXE="06" REG="00" HARDLINK="06" SYMLINK="06" MISSING="00" ORPHAN="09" FIFO="06" SOCK="0B" OTHER="06"
export NNN_FCOLORS="$BLK$CHR$DIR$EXE$REG$HARDLINK$SYMLINK$MISSING$ORPHAN$FIFO$SOCK$OTHER"
## plugins
export NNN_PLUG='z:autojump;r:getplugs;f:fzcd;p:preview-tui'

# Use gnu coreutils without g prefix
PATH=$(brew --prefix)/opt/coreutils/libexec/gnubin:$PATH

# Enforce ssh connect to server use zsh in case that we couldn't execute chsh
zssh() ssh -A "$@" -t zsh

# For fix OMZ git plugin command not found: compdef
autoload -Uz compinit
compinit

# Antidote
## source antidote
source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh
## initialize plugins statically with ${ZDOTDIR:-~}/.zsh_plugins.txt
antidote load

# Useless features hidden in Warp
if [[ $TERM_PROGRAM != "WarpTerminal" ]]; then
    # For zsh-users/zsh-autosuggestions, avoid triggering autosuggestion for strings that are too long.
    ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
fi

# Chezmoi
if [[ "$OSTYPE" != "darwin"* ]]; then
    chezmoi_update() {
        chezmoi update --force
        rsync -a -v $HOME/Dropbox/Mackup/ $HOME
        rm -rf $HOME/Dropbox
    }
fi

# Resolve pkg-config conflicts with system and linuxbrew
if [[ $(uname -s) == "Linux" ]]; then
    # define function to set PKG_CONFIG_PATH and modify $PATH
    set_pkg_config_path() {
        if [ -e $1 ]; then
            # get directory path from input file path
            dir=$(dirname $1)
            # Check if path is already in $PATH
            if echo $PATH | /bin/grep -qE "(^|:)$dir($|:)"; then
                # Move existing path to the beginning of $PATH
                PATH=$(echo "$PATH" | tr ':' '\n' | grep -Fxv "$dir" | (echo "$dir"; cat) | tr '\n' ':' | sed 's/:$//')
            else
                export PATH="$dir:$PATH"
            fi
            # set PKG_CONFIG_PATH to input file path value
            export PKG_CONFIG_PATH=$1
        else
           echo "pkg-config binary not exist"
        fi
    }
fi

# Python
## Created by `pipx` on 2023-04-03 13:25:44
export PATH="$PATH:$HOME/.local/bin"
## Disable directly use python (https://www.youtube.com/watch?v=6Nl0IYkU0hU)
python() {
    if pipenv --venv &> /dev/null; then
        time pipenv run python "$@"
    else
        echo "Blocking directly use ${funcstack[@]}. Please create virtualenv first."
    fi
}
## Disable directly use pip
pip() {
    if pipenv --venv &> /dev/null; then
        pipenv "$@"
    else
        echo "Blocking directly use ${funcstack[@]}. Please create virtualenv first."
    fi
}

# Node.js
## N node package management
export N_PREFIX=$HOME/.local/n
export PATH=$PATH:$HOME/.local/n/bin

# FZF
## Config
export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build} --type f"
export FZF_DEFAULT_OPTS="--height 30% --reverse --no-mouse"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
alias fzfp="fzf --preview 'bat --style=numbers --color=always {} | head -500'"
## Auto added after install fzf keybinding
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Starship prompt
eval "$(starship init zsh)"